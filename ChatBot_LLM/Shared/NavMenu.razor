<div class="nav-menu-container">
    <div class="new-chat-section">
        <button class="btn btn-primary new-chat-button" @onclick="NewChat">
            <span class="oi oi-plus" aria-hidden="true"></span> New chat
        </button>
    </div>

    <div class="search-chat-section">
        <input type="text" class="form-control search-input" placeholder="Search chats" @bind="SearchTerm" @oninput="FilterChats" />
    </div>

    <div class="nav-item px-3">
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
            <span class="oi oi-chat" aria-hidden="true"></span> Chat
        </NavLink>
    </div>
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="/manage-faq">
            <span class="oi oi-list-rich" aria-hidden="true"></span> Quản lý FAQ
        </NavLink>
    </div>
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="prompts">
            <span class="oi oi-lightbulb" aria-hidden="true"></span> Prompts
        </NavLink>
    </div>
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="settings">
            <span class="oi oi-cog" aria-hidden="true"></span> Settings
        </NavLink>
    </div>

    <nav class="flex-column chat-history-section">
        @foreach (var session in FilteredSessions)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" @onclick="@(() => RestoreChat(session.SessionId))">
                    <span class="oi oi-chat" aria-hidden="true"></span> @session.Title
                </NavLink>
            </div>
        }
    </nav>

    <div class="user-profile-section mt-auto">
        <img src="https://placehold.co/30x30" alt="User Avatar" class="user-avatar" onerror="this.src='/images/fallback-avatar.png'" />
        <span class="user-name">Your Name</span>
    </div>
</div>

@code {
    [Inject]
    private ChatUIHandler ChatUIHandler { get; set; }

    [Inject]
    private ChatHistoryService ChatHistoryService { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    [Inject]
    private IJSRuntime JSRuntime { get; set; }

    private List<ChatSessionSummary> Sessions = new();
    private List<ChatSessionSummary> FilteredSessions = new();
    private string SearchTerm = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadChatHistory();
    }

    private async Task LoadChatHistory()
    {
        Sessions = await ChatHistoryService.GetChatSessionsAsync();
        FilteredSessions = Sessions;
        StateHasChanged();
    }

    private async Task NewChat()
    {
        await ChatUIHandler.StartNewChat();
        NavigationManager.NavigateTo("/chat", forceLoad: true);
        await Task.Delay(100);
        await JSRuntime.InvokeVoidAsync("scrollToElementById", "messagesEndRef");
        await JSRuntime.InvokeVoidAsync("focusElementById", "inputRef");
        await LoadChatHistory();
    }

    private async Task RestoreChat(string sessionId)
    {
        NavigationManager.NavigateTo($"/chat?sessionId={sessionId}", forceLoad: true);
        await Task.Delay(100);
        await JSRuntime.InvokeVoidAsync("scrollToElementById", "messagesEndRef");
        await JSRuntime.InvokeVoidAsync("focusElementById", "inputRef");
    }

    private void FilterChats()
    {
        FilteredSessions = string.IsNullOrWhiteSpace(SearchTerm)
            ? Sessions
            : Sessions.Where(s => s.Title.ToLower().Contains(SearchTerm.ToLower())).ToList();
        StateHasChanged();
    }
}

<style>
    .nav-menu-container {
        display: flex;
        flex-direction: column;
        height: 100%;
        padding: 1rem;
    }

    .new-chat-section {
        margin-bottom: 1rem;
    }

    .new-chat-button {
        width: 100%;
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        background-color: #6A38B7;
        border: none;
        color: white;
        font-weight: bold;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .new-chat-button .oi {
            margin-right: 0.5rem;
        }

    .search-chat-section {
        margin-bottom: 1rem;
    }

    .search-input {
        background-color: #552D8A;
        border: 1px solid #7D4ECC;
        color: white;
        border-radius: 0.25rem;
    }

        .search-input::placeholder {
            color: #BBB;
        }

    .chat-history-section {
        flex-grow: 1;
        overflow-y: auto;
    }

    .nav-link {
        color: rgba(255, 255, 255, 0.75);
        padding: 0.75rem 0.5rem;
        display: flex;
        align-items: center;
        border-radius: 0.25rem;
        margin-bottom: 0.25rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .nav-link:hover, .nav-link.active {
            background-color: #552D8A;
            color: white;
            text-decoration: none;
        }

        .nav-link .oi {
            margin-right: 1rem;
            width: 1.5rem;
        }

    .user-profile-section {
        display: flex;
        align-items: center;
        padding-top: 1rem;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        margin-top: 1rem;
    }

    .user-avatar {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        margin-right: 0.5rem;
        border: 1px solid white;
    }

    .user-name {
        font-weight: bold;
        color: white;
    }
</style>